{"mappings":"AAAgB,IAAIA,SAAQ,CAACC,EAASC,KAClCC,YAAW,KAEUC,KAAKC,SAAW,IAE7BJ,EAAQ,WAEZC,EAAO,SAAS,GACjB,IAAK,IAIPI,MACGC,IACIC,QAAQC,IAAIF,GAEL,KAEdD,MAAKI,IACFF,QAAQC,IAAIC,EAAE,IAGjBJ,MAAKK,IACFH,QAAQC,IAAIE,EAAE,IAEjBC,OAAMC,GAASL,QAAQC,IAAII,KAC3BC,SAAQ,KACLN,QAAQC,IAAI,sCAAC,+BACT","sources":["src/js/promise.js"],"sourcesContent":["const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n\n        let canFullFil = Math.random() > 0.5;\n        if (canFullFil) {\n            resolve('RESOLVE');\n        }\n        reject('REJECT');\n    }, 2000);\n});\n\npromise\n    .then(\n        result => {\n            console.log(result);\n            // throw new Error('ERRORRR')\n            return 5\n        })\n    .then(x => {\n        console.log(x);\n\n    })\n    .then(y => {\n        console.log(y);\n    })\n    .catch(error => console.log(error))\n    .finally(() => {\n        console.log(`%c ВСЕ БУДЕТ ХОРОШО. В ЛЮБОМ СЛУЧАЕ`,\n            'color: red; font-size: 16px;')\n    })\n\n// const makePromise = () => {\n//   return new Promise((resolve, reject) => {\n//     resolve('hello');\n//   })\n// };\n\n// makePromise().then(result => console.log(result));"],"names":["Promise","resolve","reject","setTimeout","Math","random","then","result","console","log","x","y","catch","error","finally"],"version":3,"file":"promise.1d8200f6.js.map"}